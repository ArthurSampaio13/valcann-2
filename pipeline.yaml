name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [homolog, production]

    steps:
      - name: Checkout Código
        uses: actions/checkout@v2

      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Instalar Dependências Backend
        run: |
          cd backend
          npm install

      - name: Executar Testes Backend
        run: |
          cd backend
          npm test

      - name: Build Backend
        run: |
          cd backend
          npm run build

      - name: Instalar Dependências Frontend
        run: |
          cd frontend
          npm install

      - name: Executar Testes Frontend
        run: |
          cd frontend
          npm test

      - name: Build Frontend
        run: |
          cd frontend
          npm run build

      - name: Empacotar Aplicação
        run: |
          mkdir package
          cp -r backend/build package/backend
          cp -r frontend/build package/frontend
          zip -r package.zip package

      - name: Upload Artefatos
        uses: actions/upload-artifact@v2
        with:
          name: application-package
          path: package.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: ${{ matrix.environment }}
      url: ${{ steps.deploy.outputs.url }}

    strategy:
      matrix:
        environment: [homolog, production]

    steps:
      - name: Download Artefatos
        uses: actions/download-artifact@v2
        with:
          name: application-package
          path: ./package

      - name: Configurar AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy para Elastic Beanstalk
        run: |
          if [ "${{ matrix.environment }}" == "homolog" ]; then
            eb init my-app --region us-east-1
            eb use my-app-homolog
            eb deploy
          elif [ "${{ matrix.environment }}" == "production" ]; then
            eb init my-app --region us-east-1
            eb use my-app-production
            eb deploy
          fi
